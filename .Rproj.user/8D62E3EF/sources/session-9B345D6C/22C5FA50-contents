
# Modulo II ---------------------------------------------------------------


##A
# i -----------------------------------------------------------------------

url_='https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/'

install.packages("pacman")
library(pacman)
p_load(tidyverse, janitor, jsonlite,leaflet)
data <- fromJSON(url_)
install.packages("dplyr")
library(dplyr)

ds_raw <- data$ListaEESSPrecio
locale()

ds_f <- ds_raw %>% clean_names() %>% type_convert(locale = locale(decimal_mark = ",")) %>% as_tibble() %>% glimpse()


# # ii ----------------------------------------------------------- --------

#Las anomalias que he podido observar en ds_f es que hay N/As en mucho de los precios de los combustibles. En el precio del gasoleo_a tambien encuentro que en el rango hay un salto demasiado grande entre los precios cuya anomalia puede ser justificada tomando en cuenta impuestos especiales sobre los hidrocarburos y el IVA y tambien la alsa de precios impulsada por temas politicos y economicos



#  iii ----------------------------------------------------------- --------
------------

ds_f %>% count(rotulo) %>% view()

ds_f %>%  distinct(rotulo) %>% view()
no_lowcost <- c('REPSOL','CEPSA','GALP','SHELL','BP','PETRONOR','AVIA','Q8','CAMPSA','BONAREA')

ds_lowcost <- ds_f %>% mutate(low_cost = !rotulo %in% no_lowcost)

ds_lowcost %>% count(low_cost) %>% view()

preciopromedio_idccaa <- ds_lowcost %>% select(idccaa,precio_biodiesel,precio_bioetanol,precio_gas_natural_comprimido,precio_gas_natural_licuado,precio_gases_licuados_del_petroleo,precio_gasoleo_a,precio_gasoleo_b,precio_gasoleo_premium,precio_gasolina_95_e10,precio_gasolina_95_e5,precio_gasolina_95_e5_premium,precio_gasolina_98_e10,precio_gasolina_98_e5,precio_hidrogeno) %>% group_by(idccaa) %>% 
 summarise(precio_biodiesel = mean(precio_biodiesel, na.rm = TRUE),
           precio_bioetanol = mean(precio_bioetanol, na.rm = TRUE),
           precio_gas_natural_comprimido = mean(precio_gas_natural_comprimido, na.rm = TRUE),
           precio_gas_natural_licuado = mean(precio_gas_natural_licuado, na.rm = TRUE),
           precio_gases_licuados_del_petroleo = mean(precio_gases_licuados_del_petroleo, na.rm = TRUE),
           precio_gasoleo_a = mean(precio_gasoleo_a, na.rm = TRUE),
           precio_gasoleo_b = mean(precio_gasoleo_b, na.rm = TRUE),
           precio_gasoleo_premium = mean(precio_gasoleo_premium, na.rm = TRUE),
           precio_gasolina_95_e10 = mean(precio_gasolina_95_e10, na.rm = TRUE),
           precio_gasolina_95_e5 = mean(precio_gasolina_95_e5, na.rm = TRUE),
           precio_gasolina_95_e5_premium = mean(precio_gasolina_95_e5_premium, na.rm = TRUE),
           precio_gasolina_98_e10 = mean(precio_gasolina_98_e10, na.rm = TRUE),
           precio_gasolina_98_e5 = mean(precio_gasolina_98_e5, na.rm = TRUE),
           precio_hidrogeno = mean(precio_hidrogeno, na.rm = TRUE)) %>% view()
  

ds_lowcost %>% select(precio_gasoleo_a, idccaa, rotulo) %>% group_by(idccaa) %>% 
  summarise(precio_medio = mean(precio_gasoleo_a, na.rm = TRUE)) %>% view()

ds_lowcost %>% select(precio_gasoleo_a,precio_gasolina_95_e5, idccaa, rotulo) %>% group_by(idccaa) %>% 
  summarise(gasoleo_a = mean(precio_gasoleo_a, na.rm = TRUE),  gasolina_95= mean(precio_gasolina_95_e5, na.rm = TRUE)) %>% view()

ds_lowcost %>% count(horario,sort = TRUE)

low_cost_num_expediente <- ds_lowcost %>% view()

write.csv(low_cost_num_expediente,"low-cost_num_expediente")


# iv ------------------------------------------------------------- --------


# TOP 10 ------------------------------------------------------------------

top_10MasCaras <- precio_desc_paramapa[1:10,] %>% view()


# MAPA TOP 10 -------------------------------------------------------------

top_10MasCaras %>% leaflet() %>% addTiles() %>% addCircleMarkers(lng = ~longitud_wgs84,lat = ~latitud)

# DATA SETS QUE CREE PARA SACAR EL TOP 10 ---------------------------------
precio_descendiendo <- ds_lowcost[order(ds_lowcost$precio_gasoleo_a,decreasing = TRUE),] %>% view()
precio_desc_paramapa <- precio_descendiendo %>% select(idccaa,precio_gasoleo_a,low_cost,id_municipio,id_provincia,rotulo,provincia,latitud,longitud_wgs84,margen) %>% view()



# TOP 20 ------------------------------------------------------------------

top_20MasBaratas <- precio_asc_paramapa[1:20,] %>% view()


# MAPA TOP 20 -------------------------------------------------------------

top_20MasBaratas %>% leaflet() %>% addTiles() %>% addCircleMarkers(lng = ~longitud_wgs84,lat = ~latitud)

# DATA SETS QUE CREE PARA SACAR EL TOP 20 ---------------------------------
precio_ascendiendo <- ds_lowcost[order(ds_lowcost$precio_gasoleo_a),] %>% view()
precio_asc_paramapa <- precio_ascendiendo %>% select(idccaa,precio_gasoleo_a,low_cost,id_municipio,id_provincia,rotulo,provincia,latitud,longitud_wgs84,margen) %>% view()




# B ------------------------------------------------------------- --------

# i--------Cuantas hay en Madrid y en cataluña ----------------------------

Gasolineras_enMadrid <- sum(ds_lowcost$idccaa == "13") %>% view()

#825

Gasolineras_enCataluna <- sum(ds_lowcost$idccaa == "09") %>% view()

#1514

#  low cost y no low cost en Madrid y Cataluña ----------------------------

ds_LC_noLC_MADyCAT <- ds_lowcost %>% select(municipio, rotulo, low_cost, idccaa) %>% filter(idccaa == '13'| idccaa == '09')
LowCost_NolowCostMADCAT <- ds_LC_noLC_MADyCAT %>% count(low_cost) %>% view()


# ii------- ---------------------------------------------------------------

# Dataset que cree para sacar promedio,maximo,y minimo de los prec --------
para_promediosAyE5 <- ds_lowcost %>% select(municipio,idccaa,precio_gasoleo_a,precio_gasolina_95_e5_premium) %>% filter(idccaa == '13'| idccaa == '09')


# --Precio promedio Madrid Y Cataluña -------------------------------------
MADCAT_average <- para_promediosAyE5 %>% select(precio_gasoleo_a,precio_gasolina_95_e5_premium, idccaa) %>% group_by(idccaa) %>% 
  summarise(gasoleo_a = mean(precio_gasoleo_a, na.rm = TRUE),  gasolina_95= mean(precio_gasolina_95_e5_premium, na.rm = TRUE))


# --Precio mas caro Madrid Y Cataluña -------------------------------------
MADCAT_mascaro <- para_promediosAyE5 %>% select(precio_gasoleo_a,precio_gasolina_95_e5_premium, idccaa) %>% group_by(idccaa) %>% 
   summarise(gasoleo_a =max(precio_gasoleo_a,na.rm = TRUE), gasolina_95 = max(precio_gasolina_95_e5_premium, na.rm = TRUE))


# -Precio mas bajo Madrid Y Cataluña --------------------------------------
MADCAT_masbarato <- para_promediosAyE5 %>% select(precio_gasoleo_a,precio_gasolina_95_e5_premium, idccaa) %>% group_by(idccaa) %>% 
  summarise(gasoleo_a =min(precio_gasoleo_a,na.rm = TRUE), gasolina_95 = min(precio_gasolina_95_e5_premium, na.rm = TRUE))


# # iii -------------------------------------------------------------------


# Uniendo el average, mas barato, y mas caro en una sola tabla ------------

MADCAT_AvgMaxMin <- merge(MADCAT_average, merge(MADCAT_masbarato, MADCAT_mascaro, all = TRUE), all = TRUE)



# uniendo low cost y no low cost con Average, Mas Caro, y Mas Bara --------



low_cost <- ds_lowcost %>% select(low_cost) %>% view()

informe_MAD_BCN_UE22288002 <- MADCAT_AvgMaxMin %>% view()

# creando formato CSV para informe_MAD_BCN_Expediente ---------------------


write_csv(informe_MAD_BCN_UE22288002, "Informe_MAD_BCN_UE22288002.csv")

#  C ----------------------------------------------------------- --------


# i----------precio promedio, mas bajo, y mas alto sin las grandes ciudades -------------------------------------------------------------


# creando DataSet sin las grandes ciudades Madrid, Barcelona, Sevi --------

ds_sin_GrandesCiudades <- ds_lowcost %>% filter(id_provincia == '01'| id_provincia == '02'|id_provincia == '03'|id_provincia == '01'| id_provincia == '04'| id_provincia == '05'| id_provincia == '06'| id_provincia == '07'| id_provincia == '09'| id_provincia == '10'| id_provincia == '11'| id_provincia == '12'| id_provincia == '13'| id_provincia == '14'|id_provincia == '15'| id_provincia == '16'| id_provincia == '17'|id_provincia == '18'|id_provincia == '19'|id_provincia == '20'| id_provincia == '21'| id_provincia == '22'| id_provincia == '23'| id_provincia == '24'| id_provincia == '25'| id_provincia == '26'| id_provincia == '27'| id_provincia == '29'|id_provincia == '30'| id_provincia == '31'| id_provincia == '31'| id_provincia == '32'| id_provincia == '33'| id_provincia == '34'| id_provincia == '35'| id_provincia == '36'| id_provincia == '37'| id_provincia == '38'| id_provincia == '39'| id_provincia == '40'| id_provincia == '42'| id_provincia == '43'| id_provincia == '44'| id_provincia == '45'| id_provincia == '47'| id_provincia == '48'| id_provincia == '49'| id_provincia == '50' | id_provincia == '51'| id_provincia == '52')    


# creando datasets para promedio, bajo,y alto sin grandes ciudades --------

promedio_sinGrandesCiud <- ds_sin_GrandesCiudades %>% select(precio_gasoleo_a,precio_gasolina_95_e5_premium, id_provincia) %>% group_by(id_provincia) %>% 
  summarise(gasoleo_a = mean(precio_gasoleo_a, na.rm = TRUE),  gasolina_95= mean(precio_gasolina_95_e5_premium, na.rm = TRUE)) %>% view()

masbarato_sinGrandesCiud <- ds_sin_GrandesCiudades %>% select(precio_gasoleo_a,precio_gasolina_95_e5_premium, id_provincia) %>% group_by(id_provincia) %>% 
  summarise(gasoleo_a = min(precio_gasoleo_a, na.rm = TRUE),  gasolina_95= min(precio_gasolina_95_e5_premium, na.rm = TRUE)) %>% view()

mascaro_sinGrandesCiud <- ds_sin_GrandesCiudades %>% select(precio_gasoleo_a,precio_gasolina_95_e5_premium, id_provincia) %>% group_by(id_provincia) %>% 
  summarise(gasoleo_a = max(precio_gasoleo_a, na.rm = TRUE),  gasolina_95= max(precio_gasolina_95_e5_premium, na.rm = TRUE)) %>% view()


# Tabla que presenta el Promedio, Maximo, Y Minimo sin incluir grandes ciudades--------

Prom_Max_Min_SinGrandesCiud <- merge(promedio_sinGrandesCiud, merge(masbarato_sinGrandesCiud, mascaro_sinGrandesCiud, all = TRUE), all = TRUE) %>% view()

# ii--------- -------------------------------------------------------------

# Creando expediente y formato Excel para repositorio ---------------------


informe_no_grandes_ciudades_expediente <- Prom_Max_Min_SinGrandesCiud

write_excel_csv(informe_no_grandes_ciudades_expediente, "informe_no_grandes_ciudades_expediente")




# D------- ----------------------------------------------------------------


#  i ------- no 24 horas --------------------------------------------------

no_24h <- ds_lowcost %>% filter(horario == 'L-D: 24H') %>%  select(!horario) %>% view()

no_24h %>% select(latitud, longitud_wgs84, low_cost, rotulo) %>% filter(low_cost == 'TRUE') no_lowcost[1:4, 1:10] == 'TRUE' %>% view()

# ii--------excel ---------------------------------------------------------

write_excel_csv(no_24h,'no_24_horas.xls')




# E -----------------------------------------------------------------------


# i ---------- ------------------------------------------------------------

pobmun <- readxl::read_excel('pobmun21.xlsx', skip = 1) %>% view()

pob_def <- pobmun %>% select(NOMBRE,POB21) %>% clean_names() %>% view()

pobdef_municipio <- pob_def %>% rename(municipio=nombre) %>% view()


# AÑADIENDO POBLACION AL DATASET ORIGINAL ---------------------------------

ds_pobdef <- inner_join(ds_lowcost,pobdef_municipio, by="municipio") %>% view()

write_excel_csv(ds_pobdef, 'dataset_original_con_poblacion_UE22288002.xls')

